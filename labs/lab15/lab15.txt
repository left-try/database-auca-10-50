postgres=# COPY employees TO '/tmp/employees.txt'
WITH DELIMITER '|' NULL 'N/A' CSV HEADER;
COPY 4
postgres=# COPY employees(first_name, last_name, email)
FROM '/tmp/new_employees.csv' WITH CSV HEADER;
ERROR:  could not open file "/tmp/new_employees.csv" for reading: No such file or directory
HINT:  COPY FROM instructs the PostgreSQL server process to read a file. You may want a client-side facility such as psql's \copy.
postgres=# COPY employees TO '/tmp/employees.csv'
WITH DELIMITER '|' NULL 'N/A' CSV HEADER;
COPY 4
postgres=# COPY employees(first_name, last_name, email)
FROM '/tmp/new_employees.csv' WITH CSV HEADER;
ERROR:  could not open file "/tmp/new_employees.csv" for reading: No such file or directory
HINT:  COPY FROM instructs the PostgreSQL server process to read a file. You may want a client-side facility such as psql's \copy.
postgres=# COPY employees(first_name, last_name, email)
FROM '/tmp/employees.csv' WITH CSV HEADER;
ERROR:  missing data for column "last_name"
CONTEXT:  COPY employees, line 2: "1|Alice|Ivanova|alice@company.com|IT|75000.00|1"
postgres=# COPY (SELECT * FROM employees WHERE department = 'IT')
TO '/tmp/it_employees.csv' WITH CSV HEADER;
COPY 2
postgres=# COPY products TO '/tmp/products.csv' WITH CSV HEADER;
COPY 4
postgres=# COPY customers TO '/tmp/customers.csv'
WITH CSV HEADER DELIMITER ';' QUOTE '"';
COPY 3
postgres=# COPY orders TO '/tmp/orders.csv'
WITH CSV HEADER FORCE_QUOTE (order_date);
ERROR:  syntax error at or near "FORCE_QUOTE"
LINE 2: WITH CSV HEADER FORCE_QUOTE (order_date);
                        ^
postgres=# COPY products FROM '/tmp/products.csv' WITH CSV HEADER;
ERROR:  duplicate key value violates unique constraint "products_pkey"
DETAIL:  Key (product_id)=(1) already exists.
CONTEXT:  COPY products, line 2
postgres=# COPY products FROM '/tmp/products_with_errors.csv'
WITH CSV HEADER ON_ERROR IGNORE;
ERROR:  syntax error at or near "ON_ERROR"
LINE 2: WITH CSV HEADER ON_ERROR IGNORE;
                        ^
postgres=# COPY products FROM '/tmp/products_utf8.csv'
WITH CSV HEADER ENCODING 'UTF8';
ERROR:  could not open file "/tmp/products_utf8.csv" for reading: No such file or directory
HINT:  COPY FROM instructs the PostgreSQL server process to read a file. You may want a client-side facility such as psql's \copy.
postgres=# COPY customer_feedback TO '/tmp/feedback.csv'
WITH CSV HEADER DELIMITER ',' QUOTE '"' ESCAPE '"';
COPY 3
postgres=# COPY sales_data FROM '/tmp/sales.csv'
WITH CSV HEADER NULL 'NULL';
ERROR:  could not open file "/tmp/sales.csv" for reading: No such file or directory
HINT:  COPY FROM instructs the PostgreSQL server process to read a file. You may want a client-side facility such as psql's \copy.
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_dump -d postgres > ~/pg_backups/backup.sql
-bash: /home/fum/pg_backups/backup.sql: No such file or directory
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_dump -d postgres -Fc > ~/pg_backups/backup.dump
-bash: /home/fum/pg_backups/backup.dump: No such file or directory
fum@IVANCOM-FC4Q91U:~$ sudo mkdir /pg_dumps
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_dump -d postgres > ~/pg_backups/backup.sql
-bash: /home/fum/pg_backups/backup.sql: No such file or directory
fum@IVANCOM-FC4Q91U:~$ mkdir pg_dump
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_dump -d postgres > ~/pg_backups/backup.sql
-bash: /home/fum/pg_backups/backup.sql: No such file or directory
fum@IVANCOM-FC4Q91U:~$ mkdir pg_backups
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_dump -d postgres > ~/pg_backups/backup.sql
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_dump -d postgres -Fc > ~/pg_backups/backup.dump
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_dump -d postgres -t employees -t departments > ~/pg_backups/tables_backup.sql
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_dump -d postgres -Fc -v > ~/pg_backups/backup_verbose.dump
pg_dump: last built-in OID is 16383
pg_dump: reading extensions
pg_dump: identifying extension members
pg_dump: reading schemas
pg_dump: reading user-defined tables
pg_dump: reading user-defined functions
pg_dump: reading user-defined types
pg_dump: reading procedural languages
pg_dump: reading user-defined aggregate functions
pg_dump: reading user-defined operators
pg_dump: reading user-defined access methods
pg_dump: reading user-defined operator classes
pg_dump: reading user-defined operator families
pg_dump: reading user-defined text search parsers
pg_dump: reading user-defined text search templates
pg_dump: reading user-defined text search dictionaries
pg_dump: reading user-defined text search configurations
pg_dump: reading user-defined foreign-data wrappers
pg_dump: reading user-defined foreign servers
pg_dump: reading default privileges
pg_dump: reading user-defined collations
pg_dump: reading user-defined conversions
pg_dump: reading type casts
pg_dump: reading transforms
pg_dump: reading table inheritance information
pg_dump: reading event triggers
pg_dump: finding extension tables
pg_dump: finding inheritance relationships
pg_dump: reading column info for interesting tables
pg_dump: finding table default expressions
pg_dump: finding table check constraints
pg_dump: flagging inherited columns in subtables
pg_dump: reading partitioning data
pg_dump: reading indexes
pg_dump: flagging indexes in partitioned tables
pg_dump: reading extended statistics
pg_dump: reading constraints
pg_dump: reading triggers
pg_dump: reading rewrite rules
pg_dump: reading policies
pg_dump: reading row-level security policies
pg_dump: reading publications
pg_dump: reading publication membership of tables
pg_dump: reading publication membership of schemas
pg_dump: reading subscriptions
pg_dump: reading large objects
pg_dump: reading dependency data
pg_dump: saving encoding = UTF8
pg_dump: saving standard_conforming_strings = on
pg_dump: saving search_path =
pg_dump: saving database definition
pg_dump: dumping contents of table "public.accounts"
pg_dump: dumping contents of table "public.accounts_tx"
pg_dump: dumping contents of table "public.audit_log"
pg_dump: dumping contents of table "public.audit_log_tx"
pg_dump: dumping contents of table "public.blog_posts"
pg_dump: dumping contents of table "public.book_authors"
pg_dump: dumping contents of table "public.comments"
pg_dump: dumping contents of table "public.course_enrollments"
pg_dump: dumping contents of table "public.customer_feedback"
pg_dump: dumping contents of table "public.customers"
pg_dump: dumping contents of table "public.customers_tx"
pg_dump: dumping contents of table "public.departments"
pg_dump: dumping contents of table "public.employees"
pg_dump: dumping contents of table "public.enrollments_bad"
pg_dump: dumping contents of table "public.inventory"
pg_dump: dumping contents of table "public.inventory_tx"
pg_dump: dumping contents of table "public.loans"
pg_dump: dumping contents of table "public.logs"
pg_dump: dumping contents of table "public.logs_tx"
pg_dump: dumping contents of table "public.members"
pg_dump: dumping contents of table "public.order_items"
pg_dump: dumping contents of table "public.orders"
pg_dump: dumping contents of table "public.orders_tx"
pg_dump: dumping contents of table "public.pivoted_sales"
pg_dump: dumping contents of table "public.products"
pg_dump: dumping contents of table "public.products_tx"
pg_dump: dumping contents of table "public.sales"
pg_dump: dumping contents of table "public.sales_data"
pg_dump: dumping contents of table "public.staging_customers"
pg_dump: dumping contents of table "public.student_enrollments"
pg_dump: dumping contents of table "public.student_phones"
pg_dump: dumping contents of table "public.students_bad"
pg_dump: dumping contents of table "public.target_customers"
pg_dump: dumping contents of table "public.transactions"
pg_dump: dumping contents of table "public.university_students"
pg_dump: dumping contents of table "public.user_preferences"
pg_dump: dumping contents of table "public.user_preferences_tx"
pg_dump: dumping contents of table "public.users"
pg_dump: dumping contents of table "public.users_tx"
pg_dump: dumping contents of table "public.warehouse_1"
pg_dump: dumping contents of table "public.warehouse_2"
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres createdb target_database
sudo -u postgres pg_restore -d target_database ~/pg_backups/backup.dump
pg_restore: error: could not open input file "/home/fum/pg_backups/backup.dump": Permission denied
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_restore -d target_database ~/pg_backups/backup.dump
pg_restore: error: could not open input file "/home/fum/pg_backups/backup.dump": Permission denied
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres createdb new_database
sudo -u postgres pg_restore -d new_database ~/pg_backups/backup.dump
pg_restore: error: could not open input file "/home/fum/pg_backups/backup.dump": Permission denied
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres createdb db_tables_only
sudo -u postgres pg_restore -d db_tables_only -t employees ~/pg_backups/backup.dump
pg_restore: error: could not open input file "/home/fum/pg_backups/backup.dump": Permission denied
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres createdb db_parallel
sudo -u postgres pg_restore -d db_parallel -j 4 ~/pg_backups/backup.dump
pg_restore: error: could not open input file "/home/fum/pg_backups/backup.dump": Permission denied
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres createdb db_from_sql
sudo -u postgres psql -d db_from_sql -f ~/pg_backups/backup.sql
psql: error: /home/fum/pg_backups/backup.sql: Permission denied
fum@IVANCOM-FC4Q91U:~$ su root
Password:
su: Authentication failure
fum@IVANCOM-FC4Q91U:~$ su root
Password:
su: Authentication failure
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_dump -d postgres -s > ~/pg_backups/schema_only.sql
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_dump -d postgres -a > ~/pg_backups/data_only.sql
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_dump -d postgres -T log_table -T temp_data > ~/pg_backups/backup_without_logs.sql
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_dumpall > ~/pg_backups/full_cluster_backup.sql
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_dump -d postgres -Fc --verbose > ~/pg_backups/full_postgres.dump
pg_dump: last built-in OID is 16383
pg_dump: reading extensions
pg_dump: identifying extension members
pg_dump: reading schemas
pg_dump: reading user-defined tables
pg_dump: reading user-defined functions
pg_dump: reading user-defined types
pg_dump: reading procedural languages
pg_dump: reading user-defined aggregate functions
pg_dump: reading user-defined operators
pg_dump: reading user-defined access methods
pg_dump: reading user-defined operator classes
pg_dump: reading user-defined operator families
pg_dump: reading user-defined text search parsers
pg_dump: reading user-defined text search templates
pg_dump: reading user-defined text search dictionaries
pg_dump: reading user-defined text search configurations
pg_dump: reading user-defined foreign-data wrappers
pg_dump: reading user-defined foreign servers
pg_dump: reading default privileges
pg_dump: reading user-defined collations
pg_dump: reading user-defined conversions
pg_dump: reading type casts
pg_dump: reading transforms
pg_dump: reading table inheritance information
pg_dump: reading event triggers
pg_dump: finding extension tables
pg_dump: finding inheritance relationships
pg_dump: reading column info for interesting tables
pg_dump: finding table default expressions
pg_dump: finding table check constraints
pg_dump: flagging inherited columns in subtables
pg_dump: reading partitioning data
pg_dump: reading indexes
pg_dump: flagging indexes in partitioned tables
pg_dump: reading extended statistics
pg_dump: reading constraints
pg_dump: reading triggers
pg_dump: reading rewrite rules
pg_dump: reading policies
pg_dump: reading row-level security policies
pg_dump: reading publications
pg_dump: reading publication membership of tables
pg_dump: reading publication membership of schemas
pg_dump: reading subscriptions
pg_dump: reading large objects
pg_dump: reading dependency data
pg_dump: saving encoding = UTF8
pg_dump: saving standard_conforming_strings = on
pg_dump: saving search_path =
pg_dump: saving database definition
pg_dump: dumping contents of table "public.accounts"
pg_dump: dumping contents of table "public.accounts_tx"
pg_dump: dumping contents of table "public.audit_log"
pg_dump: dumping contents of table "public.audit_log_tx"
pg_dump: dumping contents of table "public.blog_posts"
pg_dump: dumping contents of table "public.book_authors"
pg_dump: dumping contents of table "public.comments"
pg_dump: dumping contents of table "public.course_enrollments"
pg_dump: dumping contents of table "public.customer_feedback"
pg_dump: dumping contents of table "public.customers"
pg_dump: dumping contents of table "public.customers_tx"
pg_dump: dumping contents of table "public.departments"
pg_dump: dumping contents of table "public.employees"
pg_dump: dumping contents of table "public.enrollments_bad"
pg_dump: dumping contents of table "public.inventory"
pg_dump: dumping contents of table "public.inventory_tx"
pg_dump: dumping contents of table "public.loans"
pg_dump: dumping contents of table "public.logs"
pg_dump: dumping contents of table "public.logs_tx"
pg_dump: dumping contents of table "public.members"
pg_dump: dumping contents of table "public.order_items"
pg_dump: dumping contents of table "public.orders"
pg_dump: dumping contents of table "public.orders_tx"
pg_dump: dumping contents of table "public.pivoted_sales"
pg_dump: dumping contents of table "public.products"
pg_dump: dumping contents of table "public.products_tx"
pg_dump: dumping contents of table "public.sales"
pg_dump: dumping contents of table "public.sales_data"
pg_dump: dumping contents of table "public.staging_customers"
pg_dump: dumping contents of table "public.student_enrollments"
pg_dump: dumping contents of table "public.student_phones"
pg_dump: dumping contents of table "public.students_bad"
pg_dump: dumping contents of table "public.target_customers"
pg_dump: dumping contents of table "public.transactions"
pg_dump: dumping contents of table "public.university_students"
pg_dump: dumping contents of table "public.user_preferences"
pg_dump: dumping contents of table "public.user_preferences_tx"
pg_dump: dumping contents of table "public.users"
pg_dump: dumping contents of table "public.users_tx"
pg_dump: dumping contents of table "public.warehouse_1"
pg_dump: dumping contents of table "public.warehouse_2"
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_dump -d postgres -Fc -O > ~/pg_backups/backup_with_ownership.dump
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres bash -lc 'cat > ~/pg_daily_backup.sh << "EOF"
#!/bin/bash
set -euo pipefail
DATE=$(date +%Y%m%d_%H%M%S)
BACKUP_DIR="$HOME/pg_backups"
DB_NAME="postgres"

mkdir -p "$BACKUP_DIR"
pg_dump -d "$DB_NAME" -Fc > "$BACKUP_DIR/${DB_NAME}_${DATE}.dump"

# Keep only last 7 days
find "$BACKUP_DIR" -name "${DB_NAME}_*.dump" -mtime +7 -delete
EOF
chmod +x ~/pg_daily_backup.sh'
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres psql -tAc "SHOW config_file;"
/etc/postgresql/16/main/postgresql.conf
fum@IVANCOM-FC4Q91U:~$ sudo nano /etc/postgresql/16/main/postgresql.conf
fum@IVANCOM-FC4Q91U:~$ sudo systemctl reload postgresql
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres psql -d postgres -c "SELECT pg_switch_wal();"
 pg_switch_wal
---------------
 0/4225CA0
(1 row)

fum@IVANCOM-FC4Q91U:/$ sudo mkdir backup
fum@IVANCOM-FC4Q91U:/$ cd backup/
fum@IVANCOM-FC4Q91U:/backup$ sudo mkdir wal
fum@IVANCOM-FC4Q91U:/backup$ cd ~
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres psql -d postgres -c "SELECT pg_switch_wal();"
 pg_switch_wal
---------------
 0/5000160
(1 row)

fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_archivecleanup /backup/wal 000000010000000000000010
fum@IVANCOM-FC4Q91U:~$ cd /backup
fum@IVANCOM-FC4Q91U:/backup$ sudo mkdir base
fum@IVANCOM-FC4Q91U:/backup$ cd ~
fum@IVANCOM-FC4Q91U:~$ sudo systemctl start postgresql
fum@IVANCOM-FC4Q91U:~$ sudo chown postgres:postgres /backup/base
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_basebackup -h localhost -U postgres -D /backup/base -Ft -z -P
Password:
77938/77938 kB (100%), 1/1 tablespace
fum@IVANCOM-FC4Q91U:~$ sudo systemctl stop postgresql
fum@IVANCOM-FC4Q91U:~$ sudo rm -rf /var/lib/postgresql/data/*
fum@IVANCOM-FC4Q91U:~$ sudo mkdir /var/lib/postgresql/data
fum@IVANCOM-FC4Q91U:~$ sudo tar -xf /backup/base/base.tar.gz -C /var/lib/postgresql/data/
fum@IVANCOM-FC4Q91U:~$ sudo bash -lc 'cat > /var/lib/postgresql/data/recovery.signal << EOF
restore_command = '\''cp /backup/wal/%f %p'\''
recovery_target_time = '\''2024-01-15 14:30:00'\''
EOF'
fum@IVANCOM-FC4Q91U:~$ sudo systemctl start postgresql
fum@IVANCOM-FC4Q91U:~$ pg_dump -h source_host -U postgres -d source_db -Fc > migration.dump
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres psql
psql (16.10 (Ubuntu 16.10-0ubuntu0.24.04.1))
Type "help" for help.

postgres=# CREATE PUBLICATION migration_pub FOR ALL TABLES;
WARNING:  wal_level is insufficient to publish logical changes
HINT:  Set wal_level to "logical" before creating subscriptions.
CREATE PUBLICATION
postgres=# CREATE SUBSCRIPTION migration_sub
CONNECTION 'host=source_host dbname=source_db user=replication_user'
PUBLICATION migration_pub;
postgres=# ^Z
[1]+  Stopped                 sudo -u postgres psql
fum@IVANCOM-FC4Q91U:~$ pg_basebackup -h primary_host -D /var/lib/postgresql/standby -U postgres -R -P
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres psql
psql (16.10 (Ubuntu 16.10-0ubuntu0.24.04.1))
Type "help" for help.

postgres=# -- Create staging table structure
CREATE TABLE staging_customers AS SELECT * FROM customers WHERE 1=0;
postgres=# ^Z
[2]+  Stopped                 sudo -u postgres psql
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres psql -d postgres -c "\COPY (SELECT * FROM customers LIMIT 10000 OFFSET 0) TO '/tmp/customers_batch_1.csv' WITH CSV HEADER"
COPY 3
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres psql -d postgres -c "\COPY staging_customers FROM '/tmp/customers_batch_1.csv' WITH CSV HEADER"
CONTEXT:  COPY staging_customers, line 2: "1,Alice Johnson,alice@example.com,+1555000001,2025-10-06 17:29:15.262247"
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres psql
psql (16.10 (Ubuntu 16.10-0ubuntu0.24.04.1))
Type "help" for help.

postgres=# INSERT INTO target_customers (customer_id, name, email, phone)
SELECT customer_id, name, email, phone FROM staging_customers
ON CONFLICT (customer_id) DO UPDATE
SET name = EXCLUDED.name, email = EXCLUDED.email, phone = EXCLUDED.phone;
INSERT 0 0
postgres=# ^Z
[3]+  Stopped                 sudo -u postgres psql
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres psql -c '\conninfo'
You are connected to database "postgres" as user "postgres" via socket in "/var/run/postgresql" at port "5432".
fum@IVANCOM-FC4Q91U:~$ ls -lh ~/pg_backups
total 788K
-rw-r--r-- 1 fum fum 138K Oct  6 17:49 backup.dump
-rw-r--r-- 1 fum fum  52K Oct  6 17:49 backup.sql
-rw-r--r-- 1 fum fum 138K Oct  6 17:49 backup_verbose.dump
-rw-r--r-- 1 fum fum 138K Oct  6 17:51 backup_with_ownership.dump
-rw-r--r-- 1 fum fum  52K Oct  6 17:50 backup_without_logs.sql
-rw-r--r-- 1 fum fum  13K Oct  6 17:50 data_only.sql
-rw-r--r-- 1 fum fum  62K Oct  6 17:51 full_cluster_backup.sql
-rw-r--r-- 1 fum fum 138K Oct  6 17:51 full_postgres.dump
-rw-r--r-- 1 fum fum  40K Oct  6 17:50 schema_only.sql
-rw-r--r-- 1 fum fum 3.4K Oct  6 17:49 tables_backup.sql
fum@IVANCOM-FC4Q91U:~$ sudo -u postgres pg_restore --list ~/pg_backups/backup.dump | head
